/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/listLogic.js":
/*!**************************!*\
  !*** ./src/listLogic.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   listLogic: () => (/* binding */ listLogic)\n/* harmony export */ });\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ \"./src/style.css\");\n/* harmony import */ var _toDo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toDo.js */ \"./src/toDo.js\");\n\n\n\n// ORIGINAL FUNCTION CALL,\nvar listLogic = function () {\n  // localStorage.clear(); // using only for testing\n\n  // INITIAL: toDo item variables\n  var itemTitle = '';\n  var itemDesc = '';\n  var itemDue = '';\n  var itemPri = 1;\n\n  // INITIAL: define allProjects object that dynamically stores arrays as new properties \n  var allProjects = {\n\n    // new array properties would be stored here\n  };\n\n  // ********************* STORAGE HANDLING ********************* //\n\n  // stores serialized version of 'AllProjects'\n  var stored_serialized = JSON.stringify(allProjects);\n\n  // checking if storedProjects was never set\n  if (allProjects.length === undefined) {\n    console.log(\"Fresh project\");\n    localStorage.setItem('allProjects', stored_serialized); // sets a fresh object to local storage\n  }\n\n  // if storedProjects was never set\n  else {\n    console.log(\"Projects exists\");\n    var stored_deserialized = JSON.parse(localStorage.getItem('allProjects')); // Retrieves exisisting projects from storedProjects object \n  }\n\n  // console.log(localStorage);\n\n  // ************************************************************* //\n\n  /*     // INITIAL: Sets the initial Project name and is used later to store new project names within addProject\n      var projectName = 'Default';  \n  \n      // INITIAL: Initial Empty Item\n      let listItem = toDo(itemTitle, itemDesc, itemDue, itemPri);\n  \n      // INITIAL: Sets Default project\n      allProjects[projectName] = [];\n  \n      // INITIAL: Adds 'empty' list item to project array\n      allProjects[projectName].push(listItem); */\n\n  var allProjectsTotal = Object.keys(allProjects).length;\n\n  // FUNCTION (CURRENT PROJECTS): - responsible for placing newly named projects into allProjects array\n  //                              - \n  function listProjects() {\n    console.log(Object.keys(allProjects));\n  }\n\n  // FUNCTION (CURRENT PROJECTS): - responsible for placing newly named projects into allProjects array\n  //                              - \n  function listProjectsArray() {\n    var projectsArray = Object.keys(allProjects);\n    return projectsArray;\n  }\n\n  // FUNCTION (NEW PROJECTS): - responsible for placing newly named projects into allProjects array\n  //           - activates when onClick for new project takes place.\n  //           - takes in user input for project name and stores it in the allProjects array\n  function addProject(projectName) {\n    // console.log(\"Enter addProject function\");\n    // Sets variable for 'empty' list item\n    var listItem = (0,_toDo_js__WEBPACK_IMPORTED_MODULE_1__.toDo)(itemTitle, itemDesc, itemDue, itemPri);\n    projectName = projectName.trim();\n\n    // set projectName as a new property of the allProjects object\n    allProjects[projectName] = [];\n\n    // empty array (empty item) NEEDS to also be pushed for allProjects to 'recognize' as an array\n    allProjects[projectName].push(listItem);\n    allProjectsTotal = Object.keys(allProjects).length;\n    // console.log(projectName + \" added\");\n\n    // serializes for local storage\n    // let projectName_serialized = JSON.stringify\n\n    stored_serialized = JSON.stringify(allProjects); // Requires call for setItem\n    localStorage.setItem('allProjects', stored_serialized); // sets current object to local storage\n    console.log(localStorage); // prints local storage to user\n\n    return {\n      array: allProjects[projectName],\n      string: projectName\n    }; // return project array\n  }\n\n  // **************** WORKING ON ****************\n  // FUNCTION (REMOVE PROJECTS): - responsible for removing named projects inside allProjects array\n  //                             - projectName property needs to be passed to function to identify \n  function removeProject(projectName) {\n    var before = Object.keys(allProjects).length;\n    var projectDes = projectName;\n    delete allProjects[projectDes];\n    var after = Object.keys(allProjects).length;\n\n    // check if property was removed by checking if the number of allProjects properties was reduced*\n    if (after < before) {\n      console.log(projectDes + \" was removed\");\n    } else {\n      console.log(projectDes + \" was not removed\");\n    }\n  }\n\n  // FUNCTION (ADD TODO LIST ITEMS): - responsible for adding new items to a designated project\n  //                                 - called when add button under a project is clicked\n  function addToDo(projectName, toDoName) {\n    // console.log(\"called addToDo function\");\n\n    var projectDes = projectName;\n\n    // Project should be passed into function as variable - 'projectName'\n    // var selectedProject = projectName;\n\n    // based on the project selected, take in new variables for object\n    var itemTitle = toDoName;\n    var itemDesc = '';\n    var itemDue = '';\n    var itemPri = 1;\n    var itemPos = 0;\n\n    // with the new variables, instantiate the new toDo list object\n    var listItem = (0,_toDo_js__WEBPACK_IMPORTED_MODULE_1__.toDo)(itemTitle, itemDesc, itemDue, itemPri, itemPos);\n\n    // push that new object to the allProjects array\n    allProjects[projectDes].push(listItem);\n    return {\n      array: allProjects[projectName],\n      string: projectName,\n      lengths: allProjects[projectName].length\n    }; // return project array        \n  }\n\n  ;\n  function removeToDo(project, index, length) {\n    // project 1, pos 1, length is 3\n    // console.log(\"called removeToDo function\");\n\n    // based on the project selected, take in new variables for object\n    var itemTitle = '';\n    var itemDesc = '';\n    var itemDue = '';\n    var itemPri = 1;\n    var itemPos = 0;\n\n    // with the new variables, instantiate the new toDo list object\n    var listItem = (0,_toDo_js__WEBPACK_IMPORTED_MODULE_1__.toDo)(itemTitle, itemDesc, itemDue, itemPri, itemPos);\n    index = parseInt(index, 10);\n\n    // console.log(\"index: \" + index);\n\n    // if the length of the project array is 1 and the index is 0,\n    // instead of removing the array logic/DOM entirely just reset it\n    // otherwise just remove the logic/DOM\n\n    if (length === 1 && index === 0) {\n      console.log(\"Only a single item exists\");\n\n      // pop() item from project array\n      allProjects[project].pop(index);\n\n      // console.log(allProjects[project]); //  check array\n\n      // push that new object to the allProjects array\n      allProjects[project].push(listItem);\n\n      // console.log(allProjects[project]); //  check array\n    } else {\n      removeElementAtIndex(allProjects[project], index);\n      // console.log((allProjects[project]));\n    }\n  }\n\n  ;\n\n  // FUNCTION (EDIT TODO LIST ITEMS): - responsible for editing specified project array items\n  //                                  - called when gui item section is clicked on\n  //                                  - **** WILL NOT WORK AFTER SECOND EDIT ****\n  function editProject(currentProperty, newProperty) {\n    // set projectName as a new property of the allProjects object\n    allProjects[newProperty] = allProjects[currentProperty];\n    delete allProjects[currentProperty];\n    allProjectsTotal = Object.keys(allProjects).length;\n    return {\n      array: allProjects[newProperty],\n      string: newProperty\n    }; // return project array\n  }\n\n  ;\n  function listItems(project) {\n    var projectName = project;\n    var projectArray = allProjects[projectName];\n    return projectArray;\n  }\n  ;\n  function projectLength(project) {\n    var projectLength = allProjects[project].length;\n    return projectLength;\n  }\n  ;\n  function removeElementAtIndex(arr, index) {\n    if (index >= 0 && index < arr.length) {\n      arr.splice(index, 1);\n      return arr;\n    } else {\n      console.log(\"else error: \" + index);\n      console.error(\"Index out of bounds\");\n      return arr; // Return the original array if the index is out of bounds\n    }\n  }\n\n  return {\n    addProject: addProject,\n    removeProject: removeProject,\n    listProjects: listProjects,\n    listProjectsArray: listProjectsArray,\n    addToDo: addToDo,\n    removeToDo: removeToDo,\n    editProject: editProject,\n    listItems: listItems,\n    projectLength: projectLength\n  };\n\n  // **************** TESTING INPUTS/FUNCTIONS **************** //\n\n  // addProject(); // - asks for project name, Adds new project\n\n  // removeProject(allProjectsTotal); // -  Removes designated Project, determines if project was exists/was removed\n\n  // addToDo(); // - asks for project, Adds empty toDo item to designated projects\n\n  // editToDo(); // - asks for which project, prompts for details - function that edits toDo listItems\n\n  // listProjects();\n\n  // ********************* TESTING PRINTS ********************* //\n\n  // *********************************************************** // \n\n  // window.addProject = addProject; // makes addProject() function available to user globally\n}(); // Ends CurrentSession\n\n// **** IMPORTANT IDEA ****: To get around the issue of not being able to export nested functions\n//            Attach each function to the listLogic() object prototype\n\n//# sourceURL=webpack://todolist_main/./src/listLogic.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   component: () => (/* binding */ component)\n/* harmony export */ });\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ \"./src/style.css\");\n/* harmony import */ var _listLogic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./listLogic.js */ \"./src/listLogic.js\");\n/* harmony import */ var _addProj_button_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./addProj_button.svg */ \"./src/addProj_button.svg\");\n\n\n\nfunction component() {\n  // GLOBAL VARIABLES\n\n  console.log(\"Initialized DOM\");\n  var base = document.createElement('div');\n  var nav = document.createElement('div');\n  var main = document.createElement('div');\n  var foot = document.createElement('div');\n  var main1 = document.createElement('div');\n  var main2 = document.createElement('div');\n  var sideTitle = document.createElement('div');\n  var sideMain = document.createElement('div');\n  var sideHead = document.createElement('div');\n  var addProj = document.createElement('div');\n  var projButton = document.createElement('div');\n  var mainTitle = document.createElement('div');\n  var mainList = document.createElement('div');\n  var mainHead = document.createElement('div');\n  var addItem = document.createElement('div');\n  var itemButton = document.createElement('div');\n  base.id = 'outerContainer';\n  nav.id = 'navBar';\n  main.id = 'mainSec';\n  foot.id = 'footBar';\n  main1.id = 'sideBar';\n  main2.id = 'mainBar';\n  sideTitle.id = 'sideTit';\n  sideMain.id = 'sideMa';\n  sideHead.id = 'sideHead';\n  addProj.id = 'addProj';\n  projButton.id = 'projButton';\n  mainTitle.id = 'mainTitle';\n  mainList.id = 'mainList';\n  mainHead.id = 'mainHead';\n  addItem.id = 'addItem';\n  itemButton.id = 'itemButton';\n  base.appendChild(nav);\n  base.appendChild(main);\n  base.appendChild(foot);\n  main.appendChild(main1);\n  main.appendChild(main2);\n  main1.appendChild(sideTitle);\n  main1.appendChild(sideMain);\n  sideTitle.appendChild(sideHead);\n  sideMain.appendChild(addProj);\n  addProj.appendChild(projButton);\n  main2.appendChild(mainTitle);\n  main2.appendChild(mainList);\n  mainTitle.appendChild(mainHead);\n  mainList.appendChild(addItem);\n  addItem.appendChild(itemButton);\n  mainHead.textContent = 'toDo Items';\n  sideHead.textContent = 'Projects';\n\n  // var mainChild = mainList.childNodes[1];\n\n  // on click should temporarily disable ability to continue clicking\n  itemButton.style.pointerEvents = \"none\";\n\n  // ********************** CLICK LISTENERS ********************** //\n\n  // Click Listener: That adds new project element\n  projButton.addEventListener(\"click\", function () {\n    console.log(\"Called projButton\");\n\n    // on click should temporarily disable ability to continue clicking\n    projButton.style.pointerEvents = \"none\";\n\n    // click ability returns dependent on if user successfully adds title to project\n\n    // selects projects list div by ID\n    var sideMaDiv = document.getElementById(\"sideMa\");\n    var projChild = document.createElement(\"div\");\n    var titleInput = document.createElement(\"input\");\n    var closeButton = document.createElement(\"div\");\n    var spacer = document.createElement(\"div\");\n    projChild.classList.add(\"unselectedProject\");\n    projChild.id = \"projChild\";\n\n    // First Project Input\n    titleInput.type = \"text\";\n    titleInput.id = \"projInput\";\n    titleInput.placeholder = \"New Project\";\n    titleInput.value = \"\";\n    titleInput.style.border = \"none\";\n    closeButton.id = \"closeButton\";\n    // closeButton.style.border = \"0.5px solid black\";\n\n    // Create element with textbox for input\n    sideMaDiv.appendChild(projChild);\n    projChild.appendChild(titleInput);\n    projChild.appendChild(closeButton);\n    projChild.appendChild(spacer);\n\n    // spacer.style.border = \"1px solid red\";\n    spacer.style.width = \"12px\";\n    var currentProperty = \"\";\n    var newProperty = \"\";\n    var firstTime = 0;\n    var projectArray = [];\n    var projectName = \"\";\n\n    // ****** INPUT LISTENER ****** \n    // Press enter after Project title input to set element information\n    titleInput.addEventListener(\"keydown\", function (event) {\n      console.log(\"Called projButton > titleInput\");\n\n      // Get Project names and store into an array using - logicList.js\n      var projectsList = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listProjectsArray();\n      var exists = 0;\n      var count = 0;\n\n      // on click should temporarily disable ability to continue clicking\n      itemButton.style.pointerEvents = \"none\";\n      var mainDiv = document.querySelector('#mainList');\n      var childNodes = mainDiv.childNodes;\n\n      // querySelect all the projChild elements, change their classes to unselectedProject\n      var projOnChild = document.querySelector('.selectedProject');\n      var enteredText = \"\";\n      var trimmedText = \"\";\n      var projectItems = [];\n      if (event.key === \"Enter\") {\n        console.log(\"Clicked Enter\");\n        enteredText = titleInput.value;\n        newProperty = titleInput.value;\n\n        // console.log(\"You entered: \" + enteredText);\n        titleInput.blur();\n\n        // CHECKER - name variable set to switch on/off when a project name match occurs - variable\n        while (count < projectsList.length) {\n          if (projectsList[count] === enteredText) {\n            exists = 1;\n            titleInput.textContent = \"INVALID\";\n            titleInput.style.color = 'red';\n            return;\n          }\n          count++;\n        }\n      }\n\n      // if title entered has a length > 0 characters & there are no project name matches\n      if (enteredText.length > 0 && exists === 0) {\n        // *** FUNCTIONS ***\n        // changes an elements selection\n        var selectProject = function selectProject() {\n          if (projOnChild != null) {\n            // console.log(\"selectedProject exists\");\n\n            projOnChild.classList.remove(\"selectedProject\");\n            projOnChild.classList.add(\"unselectedProject\");\n          }\n          // changing ONLY the selected project\n          if (projChild.classList.contains(\"unselectedProject\")) {\n            projChild.classList.remove(\"unselectedProject\");\n            projChild.classList.add(\"selectedProject\");\n\n            // console.log(\"Class changed to selectedProject\");\n          }\n        };\n        var clearToDos = function clearToDos() {\n          var mainDiv = document.getElementById('mainList');\n          var elementIndex = 1;\n\n          // let result = mainDiv.contains(childNodes[elementIndex]);\n\n          while (mainDiv.contains(childNodes[elementIndex])) {\n            // mainDiv = document.getElementById('mainList');\n\n            mainDiv.removeChild(childNodes[elementIndex]); // remove childNodes\n          }\n\n          // console.log(childNodes);\n        };\n        // projChild.style.backgroundColor = \"none\";\n        titleInput.style.color = 'black';\n        trimmedText = enteredText.trim();\n        titleInput.textContent = trimmedText; // - NEW\n        titleInput.value = trimmedText; // - NEW - ensures text is moved to the middle of div\n        titleInput.style.fontSize = \"14px\"; // - NEW\n\n        if (firstTime === 0) {\n          // - send title to addProject() in listLogic.js to add property to allProjects array\n          projectItems = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.addProject(trimmedText);\n          projectArray = projectItems.array;\n          projectName = projectItems.string;\n          firstTime = 1;\n          currentProperty = titleInput.textContent;\n          selectProject(); // changes selection to element\n          clearToDos();\n\n          // function returns updated project array for DOM\n          projectItems = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(projectName);\n        } else {\n          // - send title to editToDo() in listLogic.js to edit currentProperty to allProjects array \n          projectItems = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.editProject(currentProperty, newProperty);\n          projectArray = projectItems.array;\n          projectName = projectItems.string;\n          currentProperty = newProperty;\n          selectProject(); // changes selection to element\n          clearToDos();\n\n          // function returns updated project array for DOM\n          projectItems = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(projectName);\n        }\n\n        // Based on the designated allProjects array, take those items and add them to the DOM in \n        // the form of toDo items\n        addAllToDo_DOM(projectArray, projectName);\n        _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listProjects();\n\n        // On Click - should bring back ability to use add projects button \n        projButton.style.pointerEvents = \"auto\";\n\n        // NOTE: projChild > titleInput\n\n        // *** LISTENERS ***\n\n        // when element is clicked change selection to that element\n        projChild.addEventListener(\"click\", function () {\n          console.log(\"called project selection\");\n\n          // check if latest DOM element's title is '' 'blank',\n          // if it is blank 'turn on' the toDo item button to allow clicking\n          var toDoContainer = document.getElementById('mainList');\n          var containerLength = toDoContainer.childNodes.length;\n          var lastChildRef = containerLength - 1;\n          if (containerLength > 1) {\n            // console.log(toDoContainer.childNodes[lastChildRef].firstChild.value); // gets toDo item title\n\n            var lastChildTitle = toDoContainer.childNodes[lastChildRef].firstChild.value;\n            if (lastChildTitle === \"\") {\n              // onclick makes sure to enable add item button when appropriate\n              itemButton.style.pointerEvents = \"none\";\n            } else {\n              // should turn off the add item button when appropriate\n              itemButton.style.pointerEvents = \"auto\";\n            }\n          }\n          var fresh = 0;\n          if (fresh === 0) {\n            projOnChild = document.querySelector('.selectedProject'); //  latest selection\n\n            fresh = 1;\n          }\n\n          // console.log(\"projOnChild: \" + projOnChild);\n\n          selectProject(); // 1 - Changes selected element\n\n          projOnChild = document.querySelector('.selectedProject'); //  latest selection\n\n          if (projOnChild != null) {\n            // on click should temporarily disable ability to continue clicking\n            itemButton.style.pointerEvents = \"auto\";\n            var innerValue = projOnChild.textContent; // pulls projectName\n            var arrayValues = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(innerValue); // pulls projectArray\n\n            console.log(innerValue);\n            console.log(arrayValues);\n            clearToDos(); // 2 - Clears previous childNode under toDo List\n\n            /** WORKING MOSTLY */\n            addAllToDo_DOM(arrayValues, innerValue); // 3 - Adds the appropriate elements back into toDo List\n          }\n        });\n      }\n    }); // Ends \"Enter\" keydown function\n\n    // Removes selected project elements from DOM/Logic\n    closeButton.addEventListener(\"click\", function () {\n      console.log(\"Called projButton > closeButton\");\n      var mainList = document.getElementById(\"mainList\");\n      var mainChild = document.getElementById(\"toDoChild\");\n      var property = titleInput.value;\n      // let projectLength = listLogic.projectLength(property);\n      // let i = 0;\n\n      // DOM - Removes project DOM element\n      projChild.parentNode.removeChild(projChild);\n\n      // DOM - Removes item DOM elements associated with project\n      while (mainList.contains(mainChild)) {\n        console.log(mainChild);\n        if (mainChild.nextSibling != null && mainChild.nextSibling.id === 'descSibling') {\n          // ***** TESTING *****\n\n          mainList.removeChild(mainChild.nextSibling);\n        }\n        mainList.removeChild(mainChild);\n        mainChild = document.getElementById(\"toDoChild\"); // should re-assign mainChild to next DOM element\n      }\n\n      _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(property);\n\n      // LOGIC - Need to call logic function that removes property from allProjects[] array\n      _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.removeProject(property);\n      _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(property);\n\n      // LOGIC - Lists all existing projects in logic\n      _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listProjects();\n\n      // On Click - should bring back ability to use add projects button \n      projButton.style.pointerEvents = \"auto\";\n    }); // Ends \"closeButton\" click function\n\n    // ****** Focus/Shadow LISTENERS ******\n    titleInput.addEventListener(\"focus\", function () {\n      this.style.background = \"rgba(0, 0, 0, 0)\";\n      projChild.style.boxShadow = \"none\";\n      projChild.style.background = \"white\";\n    });\n    projChild.addEventListener(\"mouseenter\", function () {\n      // this.style.border = \"1px solid red\";\n      this.style.boxShadow = \"0 4px 8px rgba(0, 0, 0, 0.2)\";\n      this.style.background = \"lightgrey\";\n    });\n    projChild.addEventListener(\"mouseleave\", function () {\n      // this.style.border = \"none\";\n      this.style.boxShadow = \"none\";\n      this.style.background = \"white\";\n    });\n    closeButton.addEventListener(\"mouseenter\", function () {\n      this.style.boxShadow = \"0 4px 8px rgba(0, 0, 0, 0.2)\";\n      this.style.border = \"0.05px solid black\";\n      // this.style.background = \"lightgrey\";  \n    });\n\n    closeButton.addEventListener(\"mouseleave\", function () {\n      // this.style.border = \"none\";\n      this.style.boxShadow = \"none\";\n      this.style.border = \"none\";\n      // this.style.background = \"white\";         \n    });\n  });\n\n  // Click Listener: That adds new item element\n  itemButton.addEventListener(\"click\", function () {\n    console.log(\"Called itemButton\");\n\n    // on click should temporarily disable ability to continue clicking\n    itemButton.style.pointerEvents = \"none\";\n\n    // get currentProject based on the 'selectedElement'\n\n    var currentProject = document.querySelector('.selectedProject').textContent; //  latest selection\n\n    console.log(currentProject);\n    // const currentProject = (mainList.childNodes[1]).getAttribute('data-value');\n\n    // declare elements needed, make similar to the adding projects version\n    var mainListDiv = document.getElementById(\"mainList\");\n    var toDoChild = document.createElement(\"div\");\n    var toDoInput = document.createElement(\"input\");\n    var dueInput = document.createElement(\"div\");\n    var dateText = document.createElement(\"div\");\n    var month = document.createElement(\"input\");\n    var dash = document.createElement(\"div\");\n    var day = document.createElement(\"input\");\n    var dash2 = document.createElement(\"div\");\n    var year = document.createElement(\"input\");\n    var closeButtonToDo = document.createElement(\"div\");\n    var spacer = document.createElement(\"div\");\n\n    // ** DESCRIPTION ** - creates and reference description div element //\n    var descSibling = document.createElement('div');\n    var descSpacer1 = document.createElement('div');\n    var descInput = document.createElement('input');\n    var descSpacer2 = document.createElement('div');\n    toDoChild.style.border = \"0.5px solid black\";\n    toDoChild.id = \"toDoChild\";\n    dateText.id = \"dateText\";\n    dateText.textContent = \"Due:\";\n    dueInput.id = \"dueInput\";\n    dueInput.style.fontSize = \"10px\"; // - NEW\n\n    month.id = \"month\";\n    month.placeholder = 1;\n    day.id = \"day\";\n    day.placeholder = 1;\n    year.id = \"year\";\n    year.placeholder = 2023;\n    dash.id = \"dash\";\n    dash.textContent = \"/\";\n    dash2.id = \"dash\";\n    dash2.textContent = \"/\";\n    spacer.id = \"spacer\";\n\n    // First Project Input\n    toDoInput.type = \"text\";\n    toDoInput.id = \"toDoInput\";\n    toDoInput.placeholder = \"New Item\";\n    toDoInput.style.fontSize = \"14px\"; // - NEW\n\n    toDoInput.value = \"\";\n    toDoInput.style.border = \"none\";\n    closeButtonToDo.id = \"closeButtonToDo\";\n    descSibling.id = \"descSibling\";\n    descSpacer1.id = \"descSpacer1\";\n    descInput.id = \"descInput\";\n    descSpacer2.id = \"descSpacer2\";\n    descInput.type = \"text\";\n    descInput.placeholder = \"Type description here...\";\n    descInput.style.fontSize = \"12px\"; // - NEW\n\n    descInput.value = \"\";\n    descInput.style.border = \"none\";\n    mainListDiv.appendChild(toDoChild);\n    toDoChild.appendChild(toDoInput);\n    toDoChild.appendChild(dateText);\n    toDoChild.appendChild(dueInput);\n    dueInput.appendChild(month);\n    dueInput.appendChild(dash);\n    dueInput.appendChild(day);\n    dueInput.appendChild(dash2);\n    dueInput.appendChild(year);\n    toDoChild.appendChild(spacer);\n    toDoChild.appendChild(closeButtonToDo);\n    toDoChild.setAttribute('data-value', currentProject);\n    var counter = 1;\n    var clickSwitch = 0;\n\n    // Need logic to edit current DOM info\n    toDoInput.addEventListener(\"keydown\", function (event) {\n      console.log(\"Called itemButton > toDoInput\");\n\n      // console.log(\"Pressed enter for new item - \" + counter);\n      // console.log(\"Project name - \" + toDoName);\n\n      var enteredText = \"\";\n      var trimmedText = \"\";\n      var arraySlot = \"\";\n      var toDoArray = [];\n      var toDoName = \"\";\n      var toDoLength = \"\";\n      var projectItems = [];\n      var toDoItems = [];\n      if (event.key === \"Enter\") {\n        enteredText = toDoInput.value;\n        console.log(\"Entered newToDo keydown function: \" + enteredText);\n        toDoInput.blur();\n      }\n\n      // if title entered has a length > 0 characters\n      if (enteredText.length > 0) {\n        // ********************************* ISSUES STEM FROM HERE ********************************* //\n\n        // newToDo elements are being added to the [1] index instead of \n\n        // let currentProjectLength = listLogic.projectLength(currentProject); \n        // console.log(\"currentProjectLength: \" + currentProjectLength);\n\n        toDoArray = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(currentProject); // project array\n        toDoName = currentProject; // projectName\n        toDoLength = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.projectLength(currentProject); // >>> 2\n\n        if (toDoArray[0][\"tit\"].length > 0) {\n          //  --> this should mean it's assigned a title already\n\n          toDoItems = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.addToDo(currentProject, enteredText);\n          toDoArray = toDoItems.array; // project array\n          toDoName = toDoItems.string; // projectName\n          toDoLength = toDoItems.lengths; // >>> 2\n\n          clickSwitch = 1;\n        } else {\n          toDoArray = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(currentProject); // project array\n          toDoName = currentProject; // projectName\n          toDoLength = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.projectLength(currentProject); // >>> 2\n        }\n\n        // ***************************************************************************************** //\n\n        arraySlot = toDoArray[toDoLength - 1]; //  >>> 2 - 1\n\n        trimmedText = enteredText.trim();\n        toDoInput.textContent = trimmedText; // - NEW\n        toDoInput.value = trimmedText; // - NEW - ensures text is moved to the middle of div\n        toDoInput.style.fontSize = \"14px\"; // - NEW\n\n        var monthValue = month.value;\n        var dayValue = day.value;\n        var yearValue = year.value;\n        var dateSet = monthValue + '-' + dayValue + '-' + yearValue;\n        var switcher = 0; // used for turning on/off description node\n\n        arraySlot[\"due\"] = dateSet;\n        arraySlot[\"tit\"] = trimmedText;\n        closeButtonToDo.dataset.info = toDoLength - 1;\n        projectItems = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(currentProject);\n\n        // console.log(projectItems);\n\n        // on click should temporarily disable ability to continue clicking\n        itemButton.style.pointerEvents = \"auto\";\n\n        // *************************** WORK IN PROGRESS *************************** // \n\n        toDoChild.addEventListener(\"click\", function (event) {\n          console.log(\"clickSwitch: \" + clickSwitch);\n          if (clickSwitch === 1) {\n            console.log(\"Calling itemButton > toDoChild click\");\n            var clickedElement = event.target;\n            var _mainList = toDoChild.parentElement;\n            var descText = \"\";\n            var descTrimmed = \"\";\n\n            // Covers the clicking of CloseButtonToDo\n            if (clickedElement.id === 'closeButtonToDo') {\n              console.log(\"Called stop propagation of DIV\");\n              event.stopPropagation(); // Prevent the parent's click event\n            }\n\n            // Covers the clicking of toDoInput\n            if (clickedElement.tagName === 'INPUT') {\n              console.log(clickedElement);\n              console.log(\"Called stop propagation of INPUT\");\n              event.stopPropagation(); // Prevent the parent's click event\n            }\n\n            if (clickedElement.tagName != 'INPUT' && clickedElement.id != 'closeButtonToDo') {\n              console.log(\"Called descSibling append if statement\");\n\n              // Switches description node on/off depending on click value - switcher\n              if (switcher === 0) {\n                _mainList.insertBefore(descSibling, toDoChild.nextSibling);\n                descSibling.appendChild(descSpacer1);\n                descSibling.appendChild(descInput);\n                descSibling.appendChild(descSpacer2);\n                descInput.textContent = arraySlot[\"desc\"];\n                descInput.value = arraySlot[\"desc\"];\n\n                // if descInput value is greater than 0 set it as the textContent\n                if (arraySlot[\"desc\"].length > 0) {\n                  console.log(\"Previously inputted value is valid\");\n                  descInput.textContent = arraySlot[\"desc\"];\n                  descInput.value = arraySlot[\"desc\"];\n                }\n                switcher = 1;\n              } else {\n                if (toDoChild.nextSibling != null) {\n                  _mainList.removeChild(toDoChild.nextSibling);\n                }\n                switcher = 0;\n              }\n\n              // ***** CLICK LISTENERS *****\n\n              // Need listener to be able to set DOM descInput value\n              descInput.addEventListener(\"keydown\", function (event) {\n                descText = \"\";\n                if (event.key === \"Enter\") {\n                  descText = descInput.value;\n                  console.log(\"Entered descInput keydown function: \" + descText);\n                  descInput.blur();\n                }\n\n                // if description entered has a length > 0 characters\n                if (descText.length > 0) {\n                  // DOM - set the text within the element\n                  descTrimmed = descText.trim();\n                  descInput.textContent = descTrimmed; // - NEW\n                  descInput.value = descTrimmed; // - NEW - ensures text is moved to the middle of div\n                  descInput.style.fontSize = \"12px\"; // - NEW\n\n                  // LOGIC - set the array parameter array project[0]['desc']\n                  arraySlot[\"desc\"] = descTrimmed;\n                  toDoArray = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(currentProject); // project array\n                  console.log(toDoArray);\n                  descInput.style.border = \"none\";\n                } else {\n                  descInput.style.border = \"1px solid red\";\n                  // console.log(\"Your description is not long enough.\");\n                }\n              });\n            }\n          }\n        });\n\n        // *********************************************************************** //\n      }\n    }); // Ends \"Enter\" keydown function\n\n    closeButtonToDo.addEventListener(\"click\", function () {\n      console.log(\"Called itemButton > closeButtonToDo\");\n\n      // store index of toDo item in variable\n      var pos = closeButtonToDo.dataset.info;\n      var project = currentProject;\n      var currentLength = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.projectLength(project); // need function to return current length of the project array\n\n      // if currentLength is 1, clear div information\n      if (currentLength === 1) {\n        if (toDoChild.nextSibling != null && toDoChild.nextSibling.id === 'descSibling') {\n          // ***** TESTING *****\n\n          mainListDiv.removeChild(toDoChild.nextSibling);\n        }\n        toDoInput.value = \"\";\n\n        // remove item from project array, needs to identify the index of project effected\n        _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.removeToDo(project, 0, currentLength);\n\n        // create function that lists project elements\n        var array = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(project);\n        console.log(array);\n      } else {\n        if (toDoChild.nextSibling != null && toDoChild.nextSibling.id === 'descSibling') {\n          mainListDiv.removeChild(toDoChild.nextSibling);\n        }\n        // remove item from DOM\n        mainListDiv.removeChild(toDoChild);\n\n        // remove item from project array, needs to identify the index of project effected\n        _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.removeToDo(project, pos, currentLength);\n\n        // create function that lists project elements\n        _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(project);\n\n        // Adjusts dataset-info for childNode elements\n\n        var closeButtonElements = document.querySelectorAll('#closeButtonToDo');\n        var currentValue = \"\";\n        var adjustedValue = \"\";\n        if (closeButtonElements[pos] != null) {\n          currentValue = closeButtonElements[pos].dataset.info; // 1\n\n          adjustedValue = currentValue - 1;\n          closeButtonElements[pos].dataset.info = adjustedValue; // 0\n\n          console.log(closeButtonElements[pos].dataset.info);\n        }\n        adjustedValue++;\n        while (closeButtonElements[adjustedValue] != null) {\n          closeButtonElements[adjustedValue].dataset.info = adjustedValue;\n          console.log(closeButtonElements[adjustedValue].dataset.info);\n          adjustedValue++;\n        }\n\n        // console.log(closeButtonElements[pos].dataset.info); // new value is 0\n\n        // create function that lists project elements\n        var _array = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(project);\n        console.log(_array);\n      }\n    });\n    closeButtonToDo.addEventListener(\"mouseenter\", function () {\n      this.style.boxShadow = \"0 4px 8px rgba(0, 0, 0, 0.2)\";\n      this.style.border = \"0.05px solid black\";\n    });\n    closeButtonToDo.addEventListener(\"mouseleave\", function () {\n      this.style.boxShadow = \"none\";\n      this.style.border = \"none\";\n    });\n  });\n\n  // ********************** SHADOW LISTENERS ********************** //\n\n  // addProj Shadow listener\n  projButton.addEventListener(\"mouseenter\", function () {\n    this.style.boxShadow = \"0 3px 8px rgba(0, 0, 0, 0.2)\";\n  });\n  projButton.addEventListener(\"mouseleave\", function () {\n    this.style.boxShadow = \"none\";\n  });\n\n  // addItem Shadow listener\n  itemButton.addEventListener(\"mouseenter\", function () {\n    this.style.boxShadow = \"0 3px 8px rgba(0, 0, 0, 0.2)\";\n  });\n  itemButton.addEventListener(\"mouseleave\", function () {\n    this.style.boxShadow = \"none\";\n  });\n\n  // ********************** GLOBAL DOM FUNCTIONS ********************** //\n\n  // AddToDo Item function\n  // should just do the job of adding the DOM element\n  // add to button and event listeners after \n  function addAllToDo_DOM(items, name) {\n    console.log(\"Called addAllToDo_DOM\");\n\n    // project name\n    var toDoArray = items; //  items array [] without project name\n    var toDoName = name;\n    var counter = 0;\n\n    // declare elements needed, make similar to the adding projects version\n    var mainListDiv = document.getElementById(\"mainList\");\n    var toDoChild = document.createElement(\"div\");\n    var toDoInput = document.createElement(\"input\");\n    var dueInput = document.createElement(\"div\");\n    var dateText = document.createElement(\"div\");\n    var month = document.createElement(\"input\");\n    var dash = document.createElement(\"div\");\n    var day = document.createElement(\"input\");\n    var dash2 = document.createElement(\"div\");\n    var year = document.createElement(\"input\");\n    var closeButtonToDo = document.createElement(\"div\");\n    var spacer = document.createElement(\"div\");\n\n    // ** DESCRIPTION ** - creates and reference description div element //\n    var descSibling = document.createElement('div');\n    var descSpacer1 = document.createElement('div');\n    var descInput = document.createElement('input');\n    var descSpacer2 = document.createElement('div');\n    toDoChild.style.border = \"0.5px solid black\";\n    toDoChild.id = \"toDoChild\";\n    dateText.id = \"dateText\";\n    dateText.textContent = \"Due:\";\n    dueInput.id = \"dueInput\";\n    dueInput.style.fontSize = \"10px\"; // - NEW\n\n    month.id = \"month\";\n    month.placeholder = 1;\n    day.id = \"day\";\n    day.placeholder = 1;\n    year.id = \"year\";\n    year.placeholder = 2023;\n    dash.id = \"dash\";\n    dash.textContent = \"/\";\n    dash2.id = \"dash\";\n    dash2.textContent = \"/\";\n    spacer.id = \"spacer\";\n\n    // First Project Input\n    toDoInput.type = \"text\";\n    toDoInput.id = \"toDoInput\";\n    toDoInput.placeholder = \"New Item\";\n    toDoInput.style.fontSize = \"14px\"; // - NEW\n\n    toDoInput.value = \"\";\n    toDoInput.style.border = \"none\";\n    closeButtonToDo.id = \"closeButtonToDo\";\n    descSibling.id = \"descSibling\";\n    descSpacer1.id = \"descSpacer1\";\n    descInput.id = \"descInput\";\n    descSpacer2.id = \"descSpacer2\";\n    descInput.type = \"text\";\n    descInput.placeholder = \"Type description here...\";\n    descInput.style.fontSize = \"12px\"; // - NEW\n\n    descInput.value = \"\";\n    descInput.style.border = \"none\";\n    if (toDoArray[0].tit.length > 0) {\n      while (counter < toDoArray.length) {\n        regenToDos(toDoArray[counter], counter); // designates project item, along with array position\n\n        counter++;\n      }\n    } else {\n      /*             console.log(\"passed into initialToDo,\");\n                  console.log(toDoArray[counter]); */\n      addInitialToDo(toDoArray[counter], counter); // designates project item, along with array position\n\n      counter++;\n    }\n\n    // Meant for newToDos\n    function addInitialToDo(item, index) {\n      console.log(\"Called addAllToDo_DOM > addInitialToDo\");\n      mainListDiv.appendChild(toDoChild);\n      toDoChild.appendChild(toDoInput);\n      toDoChild.appendChild(dateText);\n      toDoChild.appendChild(dueInput);\n      dueInput.appendChild(month);\n      dueInput.appendChild(dash);\n      dueInput.appendChild(day);\n      dueInput.appendChild(dash2);\n      dueInput.appendChild(year);\n      toDoChild.appendChild(spacer);\n      toDoChild.appendChild(closeButtonToDo);\n      toDoChild.setAttribute('data-value', toDoName); // sets the first toDo data-value\n\n      var switcher = 0;\n      var clickSwitch = 0;\n\n      // EDITS TITLE & DATE OF ITEM ELEMENT\n      toDoInput.addEventListener(\"keydown\", function (event) {\n        toDoChild.setAttribute('data-value', toDoName); // sets the first toDo data-value\n\n        // need to re-reference item being the first item of a project\n        item = toDoArray[0];\n        var enteredText = \"\";\n        var trimmedText = \"\";\n        var projectItems = [];\n        var projects = [];\n        if (event.key === \"Enter\") {\n          enteredText = toDoInput.value;\n          console.log(\"Entered initialToDo keydown function: \" + enteredText);\n          toDoInput.blur();\n        }\n\n        // if title entered has a length > 0 characters\n        if (enteredText.length > 0) {\n          // console.log(\"entered value > 0, initialToDo\");\n          // console.log(item);\n\n          trimmedText = enteredText.trim();\n          toDoInput.textContent = trimmedText; // - NEW\n          toDoInput.value = trimmedText; // - NEW - ensures text is moved to the middle of div\n          toDoInput.style.fontSize = \"14px\"; // - NEW\n\n          var monthValue = month.value;\n          var dayValue = day.value;\n          var yearValue = year.value;\n          var dateSet = monthValue + '-' + dayValue + '-' + yearValue;\n          item[\"due\"] = dateSet;\n          item[\"pri\"] = 2;\n          item[\"tit\"] = trimmedText;\n          closeButtonToDo.dataset.info = index;\n\n          // on click should temporarily disable ability to continue clicking\n          itemButton.style.pointerEvents = \"auto\";\n\n          // console.log(\"toDoName: \" + toDoName);\n\n          projectItems = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(toDoName);\n          console.log(projectItems);\n          clickSwitch = 1;\n        }\n      }); // Ends \"Enter\" keydown function\n\n      // Set to generate array ['desc'] up on clicking\n      toDoChild.addEventListener(\"click\", function (event) {\n        console.log(\"clickSwitch: \" + clickSwitch);\n        if (clickSwitch === 1) {\n          console.log(\"initialToDo > toDoChild click listener - BEFORE\");\n          console.log(switcher);\n          var clickedElement = event.target;\n\n          // re-generate what already exists as a part of the item array\n          var _mainList2 = toDoChild.parentElement;\n          var descText = \"\";\n          var descTrimmed = \"\";\n\n          // Covers the clicking of CloseButtonToDo\n          if (clickedElement.id === 'closeButtonToDo') {\n            console.log(\"Called stop propagation of DIV\");\n            event.stopPropagation(); // Prevent the parent's click event\n          }\n\n          // Covers the clicking of toDoInput\n          if (clickedElement.tagName === 'INPUT') {\n            console.log(\"Called stop propagation of INPUT\");\n            event.stopPropagation(); // Prevent the parent's click event\n          }\n\n          if (clickedElement.tagName != 'INPUT' && clickedElement.id != 'closeButtonToDo') {\n            // Switches description node on/off depending on click value - switcher\n            if (switcher === 0) {\n              _mainList2.insertBefore(descSibling, toDoChild.nextSibling);\n              descSibling.appendChild(descSpacer1);\n              descSibling.appendChild(descInput);\n              descSibling.appendChild(descSpacer2);\n              descInput.textContent = item[\"desc\"];\n              descInput.value = item[\"desc\"];\n\n              // if descInput value is greater than 0 set it as the textContent\n              if (item[\"desc\"].length > 0) {\n                console.log(\"Previously inputted value is valid\");\n                descInput.textContent = item[\"desc\"];\n                descInput.value = item[\"desc\"];\n              }\n              switcher = 1;\n            } else {\n              if (toDoChild.nextSibling != null) {\n                _mainList2.removeChild(toDoChild.nextSibling);\n              }\n              switcher = 0;\n            }\n\n            // ***** CLICK LISTENERS *****\n\n            // allow keydown event for descInput to change the current description\n            descInput.addEventListener(\"keydown\", function (event) {\n              descText = \"\";\n              if (event.key === \"Enter\") {\n                descText = descInput.value;\n                console.log(\"Entered descInput keydown function: \" + descText);\n                descInput.blur();\n              }\n\n              // if description entered has a length > 0 characters\n              if (descText.length > 0) {\n                // DOM - set the text within the element\n                descTrimmed = descText.trim();\n                descInput.textContent = descTrimmed; // - NEW\n                descInput.value = descTrimmed; // - NEW - ensures text is moved to the middle of div\n                descInput.style.fontSize = \"12px\"; // - NEW\n\n                // LOGIC - set the array parameter array project[0]['desc']\n                item[\"desc\"] = descTrimmed;\n                toDoArray = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(toDoName); // project array\n                console.log(toDoArray);\n                descInput.style.border = \"none\";\n              } else {\n                descInput.style.border = \"1px solid red\";\n                // console.log(\"Your description is not long enough.\");\n              }\n            });\n          }\n        }\n      });\n\n      closeButtonToDo.addEventListener(\"click\", function () {\n        console.log(\"Entered closeButtonToDo\");\n        console.log(descInput);\n\n        // remove toDoChild sibling\n        var mainList = toDoChild.parentElement;\n        if (toDoChild.nextSibling != null) {\n          mainList.removeChild(toDoChild.nextSibling);\n        }\n\n        //  Clears and renews old toDoChild information \n        item['tit'] = \"\";\n        item['pri'] = 0;\n        item['desc'] = \"\";\n        item['due'] = \"\";\n        console.log(\"Entered initialToDo closeButton function\");\n\n        // store index of toDo item in variable\n        var pos = closeButtonToDo.dataset.info;\n        var project = toDoName;\n        var currentLength = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.projectLength(project); // need function to return current length of the project array\n\n        // if currentLength is 1, clear div information\n        if (currentLength === 1) {\n          // on click should temporarily disable ability to continue clicking\n          itemButton.style.pointerEvents = \"none\";\n          toDoInput.value = \"\";\n\n          // remove item from project array, needs to identify the index of project effected\n          _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.removeToDo(project, pos, currentLength);\n\n          // create function that lists project elements\n          var array = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(project);\n          console.log(array);\n        } else {\n          // remove item from DOM\n          mainListDiv.removeChild(toDoChild);\n\n          // remove item from project array, needs to identify the index of project effected\n          _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.removeToDo(project, pos, currentLength);\n\n          // create function that lists project elements\n          _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(project);\n          var closeButtonElements = document.querySelectorAll('#closeButtonToDo');\n          var currentValue = \"\";\n          var adjustedValue = \"\";\n          if (closeButtonElements[pos] != null) {\n            currentValue = closeButtonElements[pos].dataset.info; // 1\n\n            adjustedValue = currentValue - 1;\n            closeButtonElements[pos].dataset.info = adjustedValue; // 0\n\n            console.log(closeButtonElements[pos].dataset.info);\n            clickSwitch = 0; // unsure if this is necessary?\n          }\n\n          adjustedValue++;\n          while (closeButtonElements[adjustedValue] != null) {\n            closeButtonElements[adjustedValue].dataset.info = adjustedValue;\n            console.log(closeButtonElements[adjustedValue].dataset.info);\n            adjustedValue++;\n          }\n\n          // console.log(closeButtonElements[pos].dataset.info); // new value is 0\n\n          // create function that lists project elements\n          var _array2 = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(project);\n          console.log(_array2);\n        }\n        clickSwitch = 0;\n      });\n      closeButtonToDo.addEventListener(\"mouseenter\", function () {\n        this.style.boxShadow = \"0 4px 8px rgba(0, 0, 0, 0.2)\";\n        this.style.border = \"0.05px solid black\";\n      });\n      closeButtonToDo.addEventListener(\"mouseleave\", function () {\n        this.style.boxShadow = \"none\";\n        this.style.border = \"none\";\n      });\n    }\n\n    // Meant for oldToDos re-generation, passes in array[i] and starting index of 0\n    function regenToDos(item, index) {\n      console.log(\"Called addAllToDo_DOM > regenToDos\");\n\n      // declare elements needed, make similar to the adding projects version\n      var mainListDiv = document.getElementById(\"mainList\");\n      var toDoChild = document.createElement(\"div\");\n      var toDoInput = document.createElement(\"input\");\n      var dueInput = document.createElement(\"div\");\n      var dateText = document.createElement(\"div\");\n      var month = document.createElement(\"input\");\n      var dash = document.createElement(\"div\");\n      var day = document.createElement(\"input\");\n      var dash2 = document.createElement(\"div\");\n      var year = document.createElement(\"input\");\n      var closeButtonToDo = document.createElement(\"div\");\n      var spacer = document.createElement(\"div\");\n\n      // ** DESCRIPTION ** - creates and reference description div element //\n      var descSibling = document.createElement('div');\n      var descSpacer1 = document.createElement('div');\n      var descInput = document.createElement('input');\n      var descSpacer2 = document.createElement('div');\n      toDoChild.style.border = \"0.5px solid black\";\n      toDoChild.id = \"toDoChild\";\n      dateText.id = \"dateText\";\n      dateText.textContent = \"Due:\";\n      dueInput.id = \"dueInput\";\n      dueInput.style.fontSize = \"10px\"; // - NEW\n\n      month.id = \"month\";\n      month.placeholder = 1;\n      day.id = \"day\";\n      day.placeholder = 1;\n      year.id = \"year\";\n      year.placeholder = 2023;\n      dash.id = \"dash\";\n      dash.textContent = \"/\";\n      dash2.id = \"dash\";\n      dash2.textContent = \"/\";\n      spacer.id = \"spacer\";\n\n      // First Project Input\n      toDoInput.type = \"text\";\n      toDoInput.id = \"toDoInput\";\n      toDoInput.placeholder = \"New Item\";\n      toDoInput.style.fontSize = \"14px\"; // - NEW\n\n      toDoInput.value = \"\";\n      toDoInput.style.border = \"none\";\n      closeButtonToDo.id = \"closeButtonToDo\";\n      descSibling.id = \"descSibling\";\n      descSpacer1.id = \"descSpacer1\";\n      descInput.id = \"descInput\";\n      descSpacer2.id = \"descSpacer2\";\n      descInput.type = \"text\";\n      descInput.placeholder = \"Type description here...\";\n      descInput.style.fontSize = \"12px\"; // - NEW\n\n      descInput.value = \"\";\n      descInput.style.border = \"none\";\n      mainListDiv.appendChild(toDoChild);\n      toDoChild.appendChild(toDoInput);\n      toDoChild.appendChild(dateText);\n      toDoChild.appendChild(dueInput);\n      dueInput.appendChild(month);\n      dueInput.appendChild(dash);\n      dueInput.appendChild(day);\n      dueInput.appendChild(dash2);\n      dueInput.appendChild(year);\n      toDoChild.appendChild(spacer);\n      toDoChild.appendChild(closeButtonToDo);\n      toDoChild.setAttribute('data-value', toDoName);\n      toDoInput.textContent = item.tit;\n      toDoInput.value = item.tit;\n      toDoInput.style.fontSize = \"16px\";\n      var dateSet = item[\"due\"];\n      var dateSplit = item[\"due\"].split('-');\n      var monthSet = \"\";\n      var daySet = \"\";\n      var yearSet = \"\";\n      if (dateSet === \"--\" || dateSet === \"X-X-XXXX\") {\n        console.log(\"Date has not been set by user.\");\n      } else {\n        monthSet = parseInt(dateSplit[0], 10); // Convert to an integer (base 10)\n        daySet = parseInt(dateSplit[1], 10);\n        yearSet = parseInt(dateSplit[2], 10);\n        month.textContent = monthSet;\n        month.value = monthSet;\n        day.textContent = daySet;\n        day.value = daySet;\n        year.textContent = yearSet;\n        year.value = yearSet;\n      }\n      item[\"due\"] = dateSet;\n      item[\"tit\"] = item.tit;\n      closeButtonToDo.dataset.info = index;\n      var switcher = 0;\n      var clickSwitch = 1;\n\n      // EDITS TITLE OF ITEM ELEMENT\n      toDoInput.addEventListener(\"keydown\", function (event) {\n        toDoChild.setAttribute('data-value', toDoName); // sets the first toDo data-value\n\n        // need to re-reference item being the first item of a project\n        item = toDoArray[0];\n        var enteredText = \"\";\n        var trimmedText = \"\";\n        if (event.key === \"Enter\") {\n          enteredText = toDoInput.value;\n          console.log(\"You entered: \" + enteredText);\n          toDoInput.blur();\n        }\n\n        // if title entered has a length > 0 characters\n        if (enteredText.length > 0) {\n          trimmedText = enteredText.trim();\n          toDoInput.textContent = trimmedText; // - NEW\n          toDoInput.value = trimmedText; // - NEW - ensures text is moved to the middle of div\n          toDoInput.style.fontSize = \"14px\"; // - NEW\n\n          var monthValue = month.value;\n          var dayValue = day.value;\n          var yearValue = year.value;\n          var _dateSet = monthValue + '-' + dayValue + '-' + yearValue;\n          item[\"due\"] = _dateSet;\n          item[\"tit\"] = trimmedText;\n          closeButtonToDo.dataset.info = index;\n          clickSwitch = 1;\n        }\n      }); // Ends \"Enter\" keydown function\n\n      // Set to generate array ['desc'] up on clicking\n      toDoChild.addEventListener(\"click\", function (event) {\n        console.log(\"clickSwitch: \" + clickSwitch);\n        if (clickSwitch === 1) {\n          console.log(\"regenToDos > toDoChild click listener\");\n          var clickedElement = event.target;\n\n          // re-generate what already exists as a part of the item array\n          var _mainList3 = toDoChild.parentElement;\n          var descText = \"\";\n          var descTrimmed = \"\";\n\n          // Covers the clicking of CloseButtonToDo\n          if (clickedElement.id === 'closeButtonToDo') {\n            console.log(\"Called stop propagation of DIV\");\n            event.stopPropagation(); // Prevent the parent's click event\n          }\n\n          // Covers the clicking of toDoInput\n          if (clickedElement.tagName === 'INPUT') {\n            console.log(\"Called stop propagation of INPUT\");\n            event.stopPropagation(); // Prevent the parent's click event\n          }\n\n          if (clickedElement.tagName != 'INPUT' && clickedElement.id != 'closeButtonToDo') {\n            // Switches description node on/off depending on click value - switcher\n            if (switcher === 0) {\n              _mainList3.insertBefore(descSibling, toDoChild.nextSibling);\n              descSibling.appendChild(descSpacer1);\n              descSibling.appendChild(descInput);\n              descSibling.appendChild(descSpacer2);\n              descInput.textContent = item[\"desc\"];\n              descInput.value = item[\"desc\"];\n\n              // if descInput value is greater than 0 set it as the textContent\n              if (item[\"desc\"].length > 0) {\n                console.log(\"Previously inputted value is valid\");\n                descInput.textContent = item[\"desc\"];\n                descInput.value = item[\"desc\"];\n              }\n              switcher = 1;\n            } else {\n              if (toDoChild.nextSibling != null) {\n                _mainList3.removeChild(toDoChild.nextSibling);\n              }\n              switcher = 0;\n            }\n\n            // ***** CLICK LISTENERS *****\n\n            // allow keydown event for descInput to change the current description\n            descInput.addEventListener(\"keydown\", function (event) {\n              descText = \"\";\n              if (event.key === \"Enter\") {\n                descText = descInput.value;\n                console.log(\"Entered descInput keydown function: \" + descText);\n                descInput.blur();\n              }\n\n              // if description entered has a length > 0 characters\n              if (descText.length > 0) {\n                // DOM - set the text within the element\n                descTrimmed = descText.trim();\n                descInput.textContent = descTrimmed; // - NEW\n                descInput.value = descTrimmed; // - NEW - ensures text is moved to the middle of div\n                descInput.style.fontSize = \"12px\"; // - NEW\n\n                // LOGIC - set the array parameter array project[0]['desc']\n                item[\"desc\"] = descTrimmed;\n                toDoArray = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(toDoName); // project array\n                console.log(toDoArray);\n                descInput.style.border = \"none\";\n              } else {\n                descInput.style.border = \"1px solid red\";\n                // console.log(\"Your description is not long enough.\");\n              }\n            });\n          }\n        }\n      });\n\n      closeButtonToDo.addEventListener(\"click\", function () {\n        console.log(\"Entered regenToDo closeButton function\");\n        // console.log(closeButtonToDo.dataset.info);\n\n        // store index of toDo item in variable\n        var pos = closeButtonToDo.dataset.info;\n        var project = toDoName;\n        var currentLength = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.projectLength(project); // need function to return current length of the project array\n\n        // if currentLength is 1, clear div information\n        if (currentLength === 1) {\n          if (toDoChild.nextSibling != null && toDoChild.nextSibling.id === 'descSibling') {\n            // ***** TESTING *****\n\n            mainListDiv.removeChild(toDoChild.nextSibling);\n          }\n          toDoInput.value = \"\";\n\n          // remove item from project array, needs to identify the index of project effected\n          _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.removeToDo(project, pos, currentLength); // ******* ERROR - Index out of bounds ******* \n\n          // create function that lists project elements\n          var array = _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(project);\n          console.log(array);\n          clickSwitch = 0;\n        } else {\n          console.log(\"Entered regenToDo > else > removeChild\");\n          if (toDoChild.nextSibling != null && toDoChild.nextSibling.id === 'descSibling') {\n            // removes description node form DOM\n            mainListDiv.removeChild(toDoChild.nextSibling);\n          }\n\n          // remove item from DOM\n          mainListDiv.removeChild(toDoChild);\n\n          // remove item from project array, needs to identify the index of project effected\n          _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.removeToDo(project, pos, currentLength); // ******* ERROR - Index out of bounds *******\n\n          // create function that lists project elements\n          _listLogic_js__WEBPACK_IMPORTED_MODULE_1__.listLogic.listItems(project);\n          clickSwitch = 0;\n        }\n\n        // re-generate DOM array elements using function\n      });\n\n      closeButtonToDo.addEventListener(\"mouseenter\", function () {\n        this.style.boxShadow = \"0 4px 8px rgba(0, 0, 0, 0.2)\";\n        this.style.border = \"0.05px solid black\";\n      });\n      closeButtonToDo.addEventListener(\"mouseleave\", function () {\n        this.style.boxShadow = \"none\";\n        this.style.border = \"none\";\n      });\n    }\n  }\n  ;\n  return base;\n}\n;\n\n\n// ********************************************** BUG BASHING ********************************************** //\n/** \n * FIXED - 1. When multiple projects are added, then all are removed, \n *            it will not remove the last project to exist other than 'Default'.\n *            The existing properties will be { 'Default', 'Project 1' }\n *  \n * PROBLEM - 2. Having issues with deletion/addition of DOM/Array elements\n *         - issue is still present when deleting first element and adding new element,\n *         - two new DOM elements remain after deletion of each element \n * \n * FIXED - 3. When clicking on different projects the addToDo button will disable\n *              unnecessarily, leading to not being able to add new toDo items. \n * \n * FIXED - 4. When removing projects, the initial project is also removed BUT,\n *         -    all projects after the initial project remain and are unable to be\n *         -    removed.\n * \n * PROBLEM - 5. When creating a new project with the same name as another the toDo items\n *              end up being deleted unexpectedly. I think the regen function takes the project name\n *              and regenerating the listed array according to that name.\n *           - use validation to prevent duplicate project names from being created mistakenly\n * \n * FIXED - 6. Enable drop down to see toDo item descriptions\n * \n * FIXED - 7. Pressing close button on initial toDo item causes description to populate \n *              ISSUE: when pressing the closebutton it is also activating the toDoChild click for turning on/off the description leading to an error\n * \n * FIXED - 8. Continuing toDo elements do not clear the descInput of the description element after removing \n *            parent toDoChild node.\n * \n * FIXED - 9. Unable to append descSibling elements to mainList after regenToDo is run, so after swapping\n *              between projects. \n * \n * FIXED - 10. When creating three toDo items, the first one with a desc and the third one with a desc, and\n *               clicking the closeButton of the second item, this removes it's 'sibling' being the third\n *               toDoChild. This shouldn't happen.\n * \n * FIXED - 11. When clicking the closeButton of the 'initial toDo' it is also removing the next element,\n *               prevent this by manipulating your eventpropagation() commands. The if/else on the second one \n *               is improper.\n * \n * FIXED - 12. When clicking CloseButtonToDo on project 2 > item 1, descSibling element is not being removed \n *               for some reason.\n * \n * FIXED - 13. When clicking on CloseButtonToDo for project 2, not properly removing toDoChild.nextSibling \n * \n * \n * \n * \n*/\n// ******************************************************************************************************** //\n\n//# sourceURL=webpack://todolist_main/./src/main.js?");

/***/ }),

/***/ "./src/toDo.js":
/*!*********************!*\
  !*** ./src/toDo.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toDo: () => (/* binding */ toDo)\n/* harmony export */ });\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ \"./src/style.css\");\n\n\n// FACTORY FUNCTION: TODO OBJECT\n// Store list items in objects\nvar toDo = function toDo(title, description, dueDate, priority, position) {\n  var tit = title;\n  var desc = description;\n  var due = dueDate;\n  var pri = priority;\n  var pos = position;\n\n  // console.log(\"Called toDo Object\");\n\n  return {\n    tit: tit,\n    desc: desc,\n    due: due,\n    pri: pri,\n    pos: pos\n  };\n};\n\n\n//# sourceURL=webpack://todolist_main/./src/toDo.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/style.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/style.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/getUrl.js */ \"./node_modules/css-loader/dist/runtime/getUrl.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);\n// Imports\n\n\n\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! ./Zector.otf */ \"./src/Zector.otf\"), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(/*! ./addProj_button.svg */ \"./src/addProj_button.svg\"), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(/*! ./close-svgrepo-com.svg */ \"./src/close-svgrepo-com.svg\"), __webpack_require__.b);\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `@font-face {\n  font-family: 'MyFont';\n  src: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n}\n\nbody {\n  margin: 0px;\n  padding: 30px;\n  \n}\n\n#outerContainer {\n  display: grid;\n  \n  grid-template-rows: 5vh 85vh 10vh;\n\n}\n\n#navBar {\n\n  border: 1px solid black;\n  background-color: white;\n  \n\n}\n\n\n#mainSec {\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  \n}\n\n\n#footBar {\n\n  border: 1px solid black;\n  background-color: white;\n\n}\n\n\n\n\n#sideBar {\n  display: grid;\n  grid-template-rows: 1fr 11fr;\n}\n\n#sideTit {\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  border: 1px solid black;\n  background-color: white;\n  \n}\n\n#sideHead {\n  font-family: 'MyFont';\n  font-size: 24px;\n  background-color: white;\n  \n}\n\n#sideMa {\n  display: grid;\n  border: 0.5px solid black;\n  grid-template-rows: repeat(auto-fit, minmax(30px, 30px));\n}\n\n\n#addProj {\n  display: grid;\n  border-bottom: 0.5px solid black;\n  justify-content: center;\n  align-content: center;\n  background-color: white;\n}\n\n#projButton {\n  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_1___});\n  background-size: cover; /* Adjust as needed */\n  border: 0.5px solid black;\n  width: 16px;\n  height: 16px;\n  background-color: white;\n}\n\n#projChild {\n  display: grid;\n  align-content: center;\n  justify-content: center;\n  grid-template-columns: 1fr 22px 12px;\n  cursor: pointer;\n  background-color: white;\n  \n}\n\n.unselectedProject {\n\n  border: 1px solid black;\n\n}\n\n.selectedProject {\n\n  border: 1px solid red;\n\n}\n\n\n#projInput {\n  font-size: 12px;\n  text-align: center;\n  background-color: rgba(0, 0, 0, 0);\n}\n\n#projInput:focus {\n  box-shadow: none;\n  background: white;\n  outline: none;\n  \n}\n\n\n#projInput:focus::placeholder {\n  \n  color: transparent;\n  background-color: rgba(0, 0, 0, 0);\n}\n\n\n\n#closeButton {\n  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_2___});\n  background-size: cover; /* Adjust as needed */\n  width: 12px;\n  height: 12px;\n  align-self: center;\n}\n\n\n\n#mainBar {\n  display: grid;\n  grid-template-rows: 1fr 11fr;\n}\n\n#mainTitle {\n  display: grid;\n  border: 1px solid black;\n  justify-content: center;\n  align-content: center;\n  background-color: white;\n\n}\n\n#mainHead {\n  font-family: 'MyFont';\n  font-size: 24px;  \n  background-color: white;\n\n}\n\n#mainList {\n  display: grid;\n  border: 0.5px solid black;\n  grid-template-rows: repeat(auto-fit, minmax(30px, 30px));\n}\n\n#addItem {\n  display: grid;\n  border-bottom: 0.5px solid black;\n  justify-content: center;\n  align-content: center;\n  background-color: white;\n  \n}\n\n#itemButton {\n  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_1___});\n  background-size: cover; /* Adjust as needed */\n  border: 0.5px solid black;\n  width: 16px;\n  height: 16px;\n}\n\n#toDoChild{\n  display: grid;\n  align-content: center;\n  justify-content: center;\n  grid-template-columns: 6fr 1fr 1fr 50px 20px;\n  cursor: pointer;\n  background-color: white;\n\n}\n\n#toDoInput {\n  font-size: 14px;\n  text-align: center;\n  justify-self: center;\n  background-color: rgb(242, 242, 242);\n  border: 1px solid red;\n}\n\n#toDoInput:focus {\n  box-shadow: none;\n  background: white;\n  outline: none;\n  \n}\n\n#toDoInput::placeholder {\n  \n\n}\n\n#toDoInput:focus::placeholder {\n  \n  color: transparent;\n  background-color: rgba(0, 0, 0, 0);\n}\n\n#dateText {\n  text-align: right;\n\n}\n\n#dueInput {\n  display: grid;\n  grid-template-columns: 18px 7px 18px 6px 40px;\n  border-radius: 2px;\n  background-color: rgb(242, 242, 242);\n  width: 95px;\n  text-align: center;\n  justify-content: center;\n  justify-self: end;\n\n\n}\n\n#dueInput:focus::placeholder {\n  \n  color: transparent;\n  background-color: rgba(0, 0, 0, 0);\n}\n\n\n\n#month {\n\n  font-size: 12px;\n  border: none;\n  text-align: center;\n  background-color: rgba(0, 0, 0, 0);\n}\n\n#month:focus {\n  outline: none;\n  border: none;\n  \n}\n\n#month:focus::placeholder {\n  color: transparent;\n}\n\n#day {\n\n  font-size: 12px;\n  border: none;\n  text-align: center;\n  background-color: rgba(0, 0, 0, 0);\n}\n\n#day:focus {\n  outline: none;\n  border: none;\n  \n}\n\n#day:focus::placeholder {\n  color: transparent;\n}\n\n#year {\n\n  font-size: 12px;\n  border: none;\n  text-align: center;\n  background-color: rgba(0, 0, 0, 0);\n}\n\n#year:focus {\n  outline: none;\n  border: none;\n  \n}\n\n#year:focus::placeholder {\n  color: transparent;\n}\n\n#dash {\n  align-self: center;\n  justify-self: center;\n  justify-content: center;\n  \n\n}\n\n#spacer {\n\n  border: 1px solid white;\n\n\n}\n\n#closeButtonToDo {\n  background-image: url(${___CSS_LOADER_URL_REPLACEMENT_2___});\n  background-size: cover; /* Adjust as needed */\n  width: 12px;\n  height: 12px;\n  align-self: center;\n}\n\n\n#descSibling {\n  display: grid;\n  grid-template-columns: 10px 3fr 10px;\n  border: 1px solid black;\n\n}\n\n#descSpacer1 {\n \n\n}\n\n#descInput {\n  font-size: 12px;\n  text-align: center;\n  justify-self: center;\n  width: 400px;\n  background-color: rgb(242, 242, 242);\n  border: none;\n\n}\n\n#descInput:focus {\n  box-shadow: none;\n  background: rgb(242, 242, 242);;\n  outline: none;\n}\n\n#descInput:focus::placeholder {\n  \n  color: transparent;\n  background-color: rgba(0, 0, 0, 0);\n}\n\n#descSpacer2 {\n \n\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://todolist_main/./src/style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://todolist_main/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};\n\n//# sourceURL=webpack://todolist_main/./node_modules/css-loader/dist/runtime/getUrl.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://todolist_main/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./src/style.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://todolist_main/./src/style.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://todolist_main/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://todolist_main/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://todolist_main/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://todolist_main/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://todolist_main/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://todolist_main/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/Zector.otf":
/*!************************!*\
  !*** ./src/Zector.otf ***!
  \************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"3d8b4735b9012eee8086.otf\";\n\n//# sourceURL=webpack://todolist_main/./src/Zector.otf?");

/***/ }),

/***/ "./src/addProj_button.svg":
/*!********************************!*\
  !*** ./src/addProj_button.svg ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"3be0ea4ac64cead2bf95.svg\";\n\n//# sourceURL=webpack://todolist_main/./src/addProj_button.svg?");

/***/ }),

/***/ "./src/close-svgrepo-com.svg":
/*!***********************************!*\
  !*** ./src/close-svgrepo-com.svg ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"5c6cd17c4693737efbb3.svg\";\n\n//# sourceURL=webpack://todolist_main/./src/close-svgrepo-com.svg?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;